{"version":3,"sources":["Components/Header.jsx","helper.js","Components/Form.jsx","Components/Resume.jsx","Components/Result.jsx","Components/Spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Button","button","Error","Form","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resume","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Result","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d43828b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding:10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({titulo}) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n\ttitulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","//Obtiene la diferencia de años\r\nexport function obtenerDiferenciaYear(year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n//Calcula el total a pagar según la marca\r\nexport function calcularMarca(marca) {\r\n    \r\n    let incremento;\r\n\r\n    switch (marca) {\r\n\r\n        case 'europeo':\r\n            incremento = 1.3;\r\n            break;\r\n        \r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\nexport function obtenerPlan(plan) {\r\n    \r\n    return (plan === 'basico') ? 1.2 : 1.5;\r\n\r\n}\r\n\r\nexport function primerMayuscula(texto) {\r\n    \r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport PropTypes from 'prop-types';\r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\r\n\r\nconst Campo = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: 1px solid #e1e1e1;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #00838f;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  color: #ffffff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  border: none;\r\n  transition: background-color 0.3s ease;\r\n  margin-top: 2rem;\r\n\r\n  &:hover {\r\n    background-color: #26c6da;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n\tbackground-color: red;\r\n\tcolor: white;\r\n\tpadding: 1rem;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\tmargin-bottom: 2rem;\r\n`;\r\n\r\nconst Form = ({guardarResumen, guardarCargando}) => {\r\n\r\n\tconst [ datos, guardarDatos ] = useState({\r\n\t\tmarca: '',\r\n\t\tyear: '',\r\n\t\tplan: ''\r\n\t});\r\n\r\n\tconst [ error, guardarError ] = useState(false);\r\n\r\n\t//Extraer valores del state\r\n\tconst {marca, year, plan} = datos;\r\n\r\n\t//Leer los datos del Formulario y colocarlos en el state\r\n\tconst obtenerInformacion = e => {\r\n\t\tguardarDatos({\r\n\t\t\t...datos,\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\t//Cuando el usuario presiona el Submit\r\n\tconst cotizarSeguro = e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tif (marca.trim() === '' || year.trim() ==='' || plan.trim() === '') {\r\n\t\t\tguardarError(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tguardarError(false);\r\n\r\n\t\t//Una base de 2000\r\n\t\tlet resultado = 2000;\r\n\r\n\t\t//Obtener la diferencia de años\r\n\t\tconst diferencia = obtenerDiferenciaYear(year);\r\n\r\n\t\t//Por cada año restar el 3%\r\n\t\tresultado -= (( diferencia * 3 ) * resultado ) / 100;\r\n\r\n\t\t//Americano 15%\r\n\t\t//Asiatico 5%\r\n\t\t//Europeo 30%\r\n\r\n\t\tresultado = calcularMarca(marca) * resultado;\r\n\r\n\t\t//Básico aumenta 20%\r\n\t\t//Completo 50%\r\n\r\n\t\tconst incrementoPlan = obtenerPlan(plan);\r\n\t\tresultado = parseFloat( incrementoPlan * resultado ).toFixed(2);\r\n\r\n\t\tguardarCargando(true);\r\n\r\n\t\t//Animacion\r\n\t\tsetTimeout(() => {\r\n\r\n\t\t\tguardarCargando(false);\r\n\r\n\t\t\tguardarResumen({\r\n\t\t\t\tcotizacion: Number(resultado),\r\n\t\t\t\tdatos\r\n\t\t\t});\r\n\t\t}, 2000);\r\n\r\n\t\t//Total\r\n\r\n\t}\r\n\r\n  return (\r\n    <form\r\n\t\tonSubmit={cotizarSeguro}\r\n\t>\r\n\r\n\t{ error ? <Error>Todos los campos son obligatorios</Error> : null }\r\n\r\n      <Campo>\r\n        <Label>Marca</Label>\r\n        <Select\r\n\t\t\tname=\"marca\"\r\n\t\t\tvalue={marca}\r\n\t\t\tonChange={obtenerInformacion}\r\n\t\t>\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"americano\">Americano</option>\r\n          <option value=\"europeo\">Europeo</option>\r\n          <option value=\"asiatico\">Asiatico</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label>Año</Label>\r\n        <Select\r\n\t\t\tname=\"year\"\r\n\t\t\tvalue={year}\r\n\t\t\tonChange={obtenerInformacion}\r\n\t\t>\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label>Plan</Label>\r\n        <InputRadio \r\n\t\ttype=\"radio\" \r\n\t\tname=\"plan\" \r\n\t\tvalue=\"basico\" \r\n\t\tchecked={plan === 'basico'}\r\n\t\tonChange={obtenerInformacion}\r\n\t\t/>Básico\r\n\r\n        <InputRadio \r\n\t\ttype=\"radio\" \r\n\t\tname=\"plan\" \r\n\t\tvalue=\"completo\" \r\n\t\tchecked={plan === 'completo'}\r\n\t\tonChange={obtenerInformacion}\r\n\t\t/>Completo\r\n      </Campo>\r\n      <Button type=\"submit\">Cotizar</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n\tguardarResumen: PropTypes.func.isRequired,\r\n\tguardarCargando: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { primerMayuscula } from '../helper';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFFFFF;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resume = ({datos}) => {\r\n\r\n    //Extraer datos\r\n    const {marca, year, plan} = datos;\r\n\r\n    if (marca==='' || year==='' || plan === '') return null;\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de cotización</h2>\r\n            <ul>\r\n                <li>Marca: { primerMayuscula(marca) } </li>\r\n                <li>Plan: { primerMayuscula(plan) } </li>\r\n                <li>Año del Auto: { primerMayuscula(year) } </li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n};\r\n\r\nResume.propTypes = {\r\n\tdatos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 337);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color: rgb(127, 224, 337);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838f;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\nconst Result = ({cotizacion}) => {\r\n\r\n    return (\r\n        (cotizacion === 0) ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje> : \r\n        (\r\n            <ResultadoCotizacion>\r\n                <TransitionGroup\r\n                    component='span'\r\n                    className='resultado'\r\n                >\r\n                    <CSSTransition\r\n                        classNames='resultado'\r\n                        key={cotizacion}\r\n                        timeout={{ enter: 400, exit: 500 }}\r\n                    >\r\n                        <TextoCotizacion>El total es de: $ <span>{cotizacion}</span></TextoCotizacion>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                \r\n\r\n            </ResultadoCotizacion>\r\n        )\r\n    );\r\n};\r\n\r\nResult.propTypes = {\r\n\tcotizacion: PropTypes.number.isRequired\r\n}\r\n\r\n\r\nexport default Result;","import React from \"react\";\r\nimport '../spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-circle\">\r\n      <div className=\"sk-circle1 sk-child\"></div>\r\n      <div className=\"sk-circle2 sk-child\"></div>\r\n      <div className=\"sk-circle3 sk-child\"></div>\r\n      <div className=\"sk-circle4 sk-child\"></div>\r\n      <div className=\"sk-circle5 sk-child\"></div>\r\n      <div className=\"sk-circle6 sk-child\"></div>\r\n      <div className=\"sk-circle7 sk-child\"></div>\r\n      <div className=\"sk-circle8 sk-child\"></div>\r\n      <div className=\"sk-circle9 sk-child\"></div>\r\n      <div className=\"sk-circle10 sk-child\"></div>\r\n      <div className=\"sk-circle11 sk-child\"></div>\r\n      <div className=\"sk-circle12 sk-child\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React,{ useState } from 'react';\nimport Header from './Components/Header';\nimport Form from './Components/Form';\nimport styled from '@emotion/styled';\nimport Resume from './Components/Resume';\nimport Result from './Components/Result';\nimport Spinner from './Components/Spinner';\n\nconst Contenedor = styled.div`\n\tmax-width: 600px;\n\tmargin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n\tbackground-color: #FFF;\n\tpadding: 3rem;\n`;\n\nfunction App() {\n\n\tconst [ resumen, guardarResumen ] = useState({\n\t\tcotizacion: 0,\n\t\tdatos: {\n\t\t\tmarca: '',\n\t\t\tyear: '',\n\t\t\tplan: ''\n\t\t}\n\t});\n\n\tconst [ cargando, guardarCargando ] = useState(false);\n\n\t//Extraer Datos\n\tconst { cotizacion, datos } = resumen;\n\n\treturn ( \n\t\t<Contenedor>\n\t\t\t<Header\n\t\t\t\ttitulo= 'Cotizador de Seguros'\n\t\t\t/>\n\t\t\t<ContenedorFormulario>\n\t\t\t\t<Form\n\t\t\t\t\tguardarResumen={guardarResumen}\n\t\t\t\t\tguardarCargando={guardarCargando}\n\t\t\t\t/>\n\n\t\t\t\t{ cargando ? <Spinner/> : null }\n\n\t\t\t\t<Resume\n\t\t\t\t\tdatos={datos}\n\t\t\t\t/>\n\n\t\t\t\t{ !cargando ?\n\t\t\t\t\t<Result\n\t\t\t\t\t\tcotizacion={cotizacion}\n\t\t\t\t\t/> : null\n\t\t\t\t}\n\n\t\t\t</ContenedorFormulario>\n\t\t</Contenedor>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}